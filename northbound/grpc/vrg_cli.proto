// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.vrgcliservice";
option java_outer_classname = "VrgCliProto";

import "google/protobuf/empty.proto";

package vrgcliservice;

service VrgService {
  //rpc ConnectHsi(HsiRequest) returns(google.protobuf.Empty) {}
  rpc ConnectHsi(HsiRequest) returns(HsiReply) {}
  rpc DisconnectHsi(HsiRequest) returns(HsiReply) {}
  rpc DhcpServerStart(DhcpServerRequest) returns(DhcpServerReply) {}
  rpc DhcpServerStop(DhcpServerRequest) returns(DhcpServerReply) {}
  rpc GetVrgSystemInfo(google.protobuf.Empty) returns(VrgSystemInfo) {}
}

message HsiRequest {
  uint32 user_id = 1;
  bool force = 2;
}

message HsiReply { 
  string status = 1;
}

message DhcpServerRequest {
  uint32 user_id = 1;
}

message DhcpServerReply { 
  string status = 1;
}

message VrgBaseInfo {
  string vrg_version = 1;
  string build_date = 2;
  string dpdk_version = 3;
  string dpdk_eal_args = 4;
  uint32 num_users = 5;
}

message NicDriverInfo {
  string driver_name = 1;
  string pci_addr = 2;
  bytes mac_addr = 3;
}

message Statistics{
  uint64 rx_packets = 1;
  uint64 tx_packets = 2;
  uint64 rx_bytes = 3;
  uint64 tx_bytes = 4;
  uint64 rx_errors = 5;
  uint64 tx_errors = 6;
  uint64 rx_dropped = 7;
}

message VrgSystemInfo {
  VrgBaseInfo base_info = 1;
  repeated NicDriverInfo nics = 2;
  repeated Statistics stats = 3;
}
